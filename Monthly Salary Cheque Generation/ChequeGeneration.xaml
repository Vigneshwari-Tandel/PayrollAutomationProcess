<Activity mc:Ignorable="sap sap2010" x:Class="ChequeGeneration" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:un="clr-namespace:UiPathTeam.NumberToWordsActivities;assembly=NumberToWordsActivities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_listOfDepartment" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="in_previousMonth" Type="InArgument(x:String)" />
    <x:Property Name="in_Year" Type="InArgument(x:String)" />
    <x:Property Name="in_currentDate" Type="InArgument(x:String)" />
    <x:Property Name="in_dt_DepartmentData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_processName" Type="InArgument(x:String)" />
    <x:Property Name="in_localFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_mainDepartmentsFolderPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1158,2415</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ChequeGeneration_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPathTeam.NumberToWordsActivities</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>NumberToWordsActivities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ChequeGeneration" sap:VirtualizedContainerService.HintSize="627,2350" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="departmentSheetName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ReadEmployee" />
      <Variable x:TypeArguments="x:String" Name="Prefix" />
      <Variable x:TypeArguments="x:String" Name="DepartmentExcelFile" />
      <Variable x:TypeArguments="x:String" Name="ImagePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Workflow execution started for cheque generation " sap:VirtualizedContainerService.HintSize="585,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Cheque Generation Execution Started.&quot;]" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each department in list of department calculate final salary" DisplayName="For Each - list of department" sap:VirtualizedContainerService.HintSize="585,1996" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_listOfDepartment]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Department" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body - For Each - list of department" sap:VirtualizedContainerService.HintSize="549,1841" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:WorkbookApplication" Name="departmentExcelWorkbook" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - Set Cheque Image Path" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ImagePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_localFolderPath + "HDFC-3.jpg"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Look up for department and get Prefix for that department" DataTable="[in_dt_DepartmentData]" DisplayName="Lookup into department data table and get email" sap:VirtualizedContainerService.HintSize="507,93" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Department" LookupValue="[Department]" TargetColumnName="Department Prefix">
              <ui:LookupDataTable.CellValue>
                <OutArgument x:TypeArguments="x:String">[Prefix]</OutArgument>
              </ui:LookupDataTable.CellValue>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LookupDataTable>
            <Assign sap2010:Annotation.AnnotationText="Set location and name for department excel file" DisplayName="Assign - Excel file location in variable" sap:VirtualizedContainerService.HintSize="507,102" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[DepartmentExcelFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_mainDepartmentsFolderPath + "/" + Department  + "/" + in_Year  + "/" + in_previousMonth + "/" + in_previousMonth + "_SalaryDetails_" + in_currentDate +".xlsx"]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Open excel for read and store in data table&#xA;i.e. dt_ReadEmployee" DisplayName="Excel Application Scope - open Excel file for particular department" sap:VirtualizedContainerService.HintSize="507,108" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[departmentExcelWorkbook]" WorkbookPath="[DepartmentExcelFile]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do - of Excel Application Scope - open Excel file for particular department" sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet - get sheet name" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_2" Index="0" Sheet="[departmentSheetName]" />
                    <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_ReadEmployee]" DisplayName="Read Range - for particular departments excel file" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="[departmentSheetName]" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook - Excel Application Scope - open Excel file for particular department" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[departmentExcelWorkbook]" />
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each Employee data in department file, Generate Salary Cheque" DataTable="[dt_ReadEmployee]" DisplayName="For Each Row in the Data Table - For each employee" sap:VirtualizedContainerService.HintSize="507,996" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Employee" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body - of For Each Row in the Data Table - For each employee" sap:VirtualizedContainerService.HintSize="473,845" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd1:Bitmap" Name="Bitmap" />
                      <Variable x:TypeArguments="sd1:Graphics" Name="Graphics" />
                      <Variable x:TypeArguments="x:String" Name="NewPath" />
                      <Variable x:TypeArguments="x:String" Name="employeeCode" />
                      <Variable x:TypeArguments="x:String" Name="finalSalary" />
                      <Variable x:TypeArguments="x:String" Name="salaryInWords" />
                      <Variable x:TypeArguments="sd1:PointF" Default="[new PointF(50f, 66f)]" Name="nameLocation" />
                      <Variable x:TypeArguments="sd1:Font" Default="[new font(&quot;Bold&quot;,10)]" Name="font" />
                      <Variable x:TypeArguments="sd1:PointF" Default="[New PointF(100f,93f)]" Name="salaryInWordsLocation" />
                      <Variable x:TypeArguments="sd1:PointF" Default="[New PointF(480f,115f)]" Name="salaryLocation" />
                      <Variable x:TypeArguments="sd1:PointF" Default="[New PointF(455f,30f)]" Name="DateLocation" />
                      <Variable x:TypeArguments="x:String" Default="[Employee.Item(&quot;Employee Name&quot;).ToString]" Name="employeeName" />
                      <Variable x:TypeArguments="x:String" Default="[DateTime.Now.ToString(&quot;ddMMyyyy&quot;).ToString]" Name="chequeDate" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign - for type into image" sap:VirtualizedContainerService.HintSize="431,224" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd1:Bitmap">[Bitmap]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd1:Bitmap">[New Bitmap(ImagePath)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd1:Graphics">[Graphics]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd1:Graphics">[Graphics.FromImage(Bitmap)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[employeeCode]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Employee.Item("Employee Code").ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[NewPath]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Path.Combine(in_localFolderPath, in_processName, "Departments", Department, in_Year, in_previousMonth, ""+ Prefix + employeeCode + in_currentDate + ".jpg")]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[finalSalary]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Employee.Item("Final Salary").ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <un:ConvertNumberToWords sap2010:Annotation.AnnotationText="Convert employee salary in words" DisplayName="Convert number to words - Salary in words" sap:VirtualizedContainerService.HintSize="431,112" sap2010:WorkflowViewState.IdRef="ConvertNumberToWords_3" Language="English" Number="[CInt(finalSalary)]" ResultWords="[salaryInWords]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </un:ConvertNumberToWords>
                    <Assign sap2010:Annotation.AnnotationText="Remove - dash from words" DisplayName="Assign - Remove (-) from words" sap:VirtualizedContainerService.HintSize="431,91" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[salaryInWords]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[salaryInWords.Replace("-"," ").ToString + " Only"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Type employee name, employee salary in digits and words, current date in cheque image and save" Code="Graphics.DrawString(employeeName , font, Brushes.Black, nameLocation)&#xA;Graphics.DrawString(salaryInWords , font, Brushes.Black, salaryInWordsLocation)&#xA;Graphics.DrawString(finalSalary , font, Brushes.Black, salaryLocation)&#xA;Graphics.DrawString(chequeDate , font, Brushes.Black, dateLocation)&#xA;bitmap.Save(imageFilePath)" DisplayName="Invoke Code - for type into image" sap:VirtualizedContainerService.HintSize="431,206" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="employeeName">[employeeName]</InArgument>
                        <InArgument x:TypeArguments="sd1:Font" x:Key="font">[font]</InArgument>
                        <InArgument x:TypeArguments="sd1:PointF" x:Key="nameLocation">[nameLocation]</InArgument>
                        <InArgument x:TypeArguments="sd1:Graphics" x:Key="Graphics">[Graphics]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="imageFilePath">[Newpath]</InArgument>
                        <InArgument x:TypeArguments="sd1:Bitmap" x:Key="bitmap">[bitmap]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="salaryInWords">[CultureInfo.CurrentCulture.TextInfo.ToTitleCase(salaryInWords)]</InArgument>
                        <InArgument x:TypeArguments="sd1:PointF" x:Key="salaryInWordsLocation">[salaryInWordsLocation]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="finalSalary">[finalSalary]</InArgument>
                        <InArgument x:TypeArguments="sd1:PointF" x:Key="salaryLocation">[salaryLocation]</InArgument>
                        <InArgument x:TypeArguments="sd1:PointF" x:Key="dateLocation">[DateLocation]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="chequeDate" xml:space="preserve">[String.Join("   ", chequeDate.ToList)]</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <ui:LogMessage DisplayName="Log Message - Cheques are generated successfully." sap:VirtualizedContainerService.HintSize="507,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[Department + &quot; department cheques are generated.&quot;]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message - Workflow execution ended for cheque generation " sap:VirtualizedContainerService.HintSize="585,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Cheque Generation Execution Ended.&quot;]" />
  </Sequence>
</Activity>
<Activity mc:Ignorable="sap sap2010" x:Class="ReadDataAndCreateDepartmentList" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_listOfDepartment" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_previousMonth" Type="OutArgument(x:String)" />
    <x:Property Name="out_dictionaryOfMonths" Type="OutArgument(scg:Dictionary(x:Int32, x:String))" />
    <x:Property Name="out_Year" Type="OutArgument(x:String)" />
    <x:Property Name="out_currentDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_dt_DepartmentData" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_processName" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointUserName" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_sharepointURL" Type="InArgument(x:String)" />
    <x:Property Name="in_localFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointCreateFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="out_mainDepartmentsFolderPath" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1462,6187</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReadDataAndCreateDepartmentList_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail.Exchange</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReadDataAndCreateDepartmentList" sap:VirtualizedContainerService.HintSize="1472,6122" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_EmployeeData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilteredEmployee" />
      <Variable x:TypeArguments="x:String" Name="projectFolderPath" />
      <Variable x:TypeArguments="x:String" Name="DepartmentExcelFile" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="employeeWorkbook" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="departmentWorkbook" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="departmentListNoData" />
      <Variable x:TypeArguments="s:String[]" Name="processName" />
      <Variable x:TypeArguments="s:String[]" Name="departmentsFolder" />
      <Variable x:TypeArguments="x:String" Name="departmentFolderPath" />
      <Variable x:TypeArguments="x:String" Name="yearFolderPath" />
      <Variable x:TypeArguments="x:String" Name="monthFolderPath" />
      <Variable x:TypeArguments="x:String" Name="sharepointCreateFolderPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Execution start" sap:VirtualizedContainerService.HintSize="1430,93" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Filter department wise data execution dtarted.&quot;]" />
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read Employee Data and store it in Data table called dt_EmployeeData" DisplayName="Excel Application Scope - for emploee data" sap:VirtualizedContainerService.HintSize="1430,112" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" Workbook="[employeeWorkbook]" WorkbookPath="[in_localFolderPath + &quot;EmployeeData.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - of Excel Application Scope - for employee data" sap:VirtualizedContainerService.HintSize="376,271" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="employeeSheetName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheet sap2010:Annotation.AnnotationText="Get Sheet Name from open workbook and store in variable" DisplayName="Get Workbook Sheet - Get sheet name" sap:VirtualizedContainerService.HintSize="334,124" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_1" Index="0" Sheet="[employeeSheetName]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelGetWorkbookSheet>
            <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="Read data from workbook and store in data table" DataTable="[dt_EmployeeData]" DisplayName="Read Range - Read employee excel file" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[employeeSheetName]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ExcelCloseWorkbook sap2010:Annotation.AnnotationText="Close the open workbook" DisplayName="Close Workbook - for employee data" sap:VirtualizedContainerService.HintSize="1430,90" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[employeeWorkbook]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelCloseWorkbook>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read Department Data and store it in Data table called dt_DepartmentData" DisplayName="Excel Application Scope - for department data" sap:VirtualizedContainerService.HintSize="1430,112" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" Workbook="[departmentWorkbook]" WorkbookPath="[in_localFolderPath + &quot;DepartmentSheet.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - of Excel Application Scope - for department data" sap:VirtualizedContainerService.HintSize="311,176" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="departmentSheetName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheet sap2010:Annotation.AnnotationText="Get Sheet Name from open workbook and store in variable" DisplayName="Get Workbook Sheet - Get sheet Name" sap:VirtualizedContainerService.HintSize="334,124" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_2" Index="0" Sheet="[departmentSheetName]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelGetWorkbookSheet>
            <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="Read data from workbook and store in data table" DataTable="[out_dt_DepartmentData]" DisplayName="Read Range - read department excel file" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[departmentSheetName]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ExcelCloseWorkbook sap2010:Annotation.AnnotationText="Close the open workbook" DisplayName="Close Workbook - for department excel file" sap:VirtualizedContainerService.HintSize="1430,90" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[departmentWorkbook]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelCloseWorkbook>
    <Assign sap2010:Annotation.AnnotationText="Initialize the list variable  i.e. ListOfDepartment" DisplayName="Assign- Initialize List" sap:VirtualizedContainerService.HintSize="1430,104" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[out_listOfDepartment]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add Dipartment name in List of Department Collection" DataTable="[out_dt_DepartmentData]" DisplayName="For Each Row in Department Data - Add each department into list" sap:VirtualizedContainerService.HintSize="1430,266" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Department" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <AddToCollection x:TypeArguments="x:String" Collection="[out_listOfDepartment]" DisplayName="Add To Collection- add department in list" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[Department.Item(&quot;Department&quot;).ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:LogMessage DisplayName="Log Message - Create List Of Department" sap:VirtualizedContainerService.HintSize="1430,93" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Create List Of Department&quot;]" />
    <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" SecurePassword="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope - To create a folder on the SharePoint site" sap:VirtualizedContainerService.HintSize="1430,4161" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_5" Password="[New System.Net.NetworkCredential( String.Empty, in_sharepointPassword).Password]" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="Online" URL="[in_sharepointURL]" UserName="[in_sharepointUserName]">
      <usa:SharepointApplicationScope.Body>
        <ActivityAction x:TypeArguments="us:SharePointContextInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - Sharepoint application scope - To create a folder on the SharePoint site" sap:VirtualizedContainerService.HintSize="1396,4019" sap2010:WorkflowViewState.IdRef="Sequence_52">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Create a Salary Cheque Generation folder and a department folder if not exists." DisplayName="Sequence - Check for Project folder" sap:VirtualizedContainerService.HintSize="1354,1551" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[processName]" ChooseFile="False" DisplayName="Get children names - check in Data Folder" sap:VirtualizedContainerService.HintSize="647,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_3" RelativeUrl="[in_sharepointFolderPath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
              <If Condition="[processName.Contains(in_processName)]" DisplayName="If - On SharePoint check if the salary cheque generation folder already exists, If not then create it." sap:VirtualizedContainerService.HintSize="647,264" sap2010:WorkflowViewState.IdRef="If_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message - Project Folder Exists " sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[in_processName + &quot; folder already exists on SharePoint.&quot;]" />
                </If.Then>
                <If.Else>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - Create salary cheque generation folder" sap:VirtualizedContainerService.HintSize="268,104" sap2010:WorkflowViewState.IdRef="CreateFolder_1" LibraryName="Documents" RelativeUrl="[in_sharepointCreateFolderPath + in_processName + &quot;/&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </If.Else>
              </If>
              <Assign DisplayName="Assign - Process name to sharepoint create folder path" sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[in_sharepointCreateFolderPath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_sharepointCreateFolderPath + in_processName + "/"]</InArgument>
                </Assign.Value>
              </Assign>
              <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[departmentsFolder]" ChooseFile="False" DisplayName="Get children names - in salary cheque generation folder" sap:VirtualizedContainerService.HintSize="647,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_4" RelativeUrl="[in_sharepointFolderPath + in_processName + &quot;/&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </usal:GetChildrenNames>
              <If Condition="[departmentsFolder.Contains(&quot;Departments&quot;)]" DisplayName="If -On SharePoint check if the Department folder already exists, If not then create it." sap:VirtualizedContainerService.HintSize="647,264" sap2010:WorkflowViewState.IdRef="If_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message - Department Folder Exists" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Departments folder already exists on SharePoint.&quot;]" />
                </If.Then>
                <If.Else>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - Create departments folder" sap:VirtualizedContainerService.HintSize="268,104" sap2010:WorkflowViewState.IdRef="CreateFolder_5" LibraryName="Documents" RelativeUrl="[in_sharepointCreateFolderPath + &quot;/Departments&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </If.Else>
              </If>
              <Assign DisplayName="Assign - Departments to SharePoint create folder path" sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[in_sharepointCreateFolderPath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_sharepointCreateFolderPath + "Departments/"]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - In Local Project folder path" sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[projectFolderPath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Path.Combine(in_localFolderPath, in_processName)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder - Create project folder if not exists on local machine" sap:VirtualizedContainerService.HintSize="647,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[projectFolderPath]" />
              <Assign DisplayName="Assign - Project folder path" sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_mainDepartmentsFolderPath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Path.Combine(projectFolderPath, "Departments")]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder - Create departments folder if not exists on local machine" sap:VirtualizedContainerService.HintSize="647,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[out_mainDepartmentsFolderPath]" />
            </Sequence>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - List of department" sap:VirtualizedContainerService.HintSize="1354,2336" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[out_listOfDepartment]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="Department" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body - For Each List of department" sap:VirtualizedContainerService.HintSize="1318,2211" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="departmentFileExists" />
                      <Variable x:TypeArguments="ui:WorkbookApplication" Name="departmentExcelWorkbook" />
                      <Variable x:TypeArguments="s:DateTime" Default="[new DateTime(2023, 1, 25)]" Name="todayDate" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap2010:Annotation.AnnotationText="Create folder for each department" DisplayName="Sequence - if department folder not exist then create it" sap:VirtualizedContainerService.HintSize="1276,112" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="s:String[]" Name="chieldName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[chieldName]" ChooseFile="False" DisplayName="Get children names - In department folder" sap:VirtualizedContainerService.HintSize="648,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_1" RelativeUrl="[in_sharepointFolderPath + in_processName + &quot;/Departments/&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                      <If Condition="[chieldName.Contains(Department)]" DisplayName="If - On SharePoint check if the Department folder already exists, If not then create it." sap:VirtualizedContainerService.HintSize="648,262" sap2010:WorkflowViewState.IdRef="If_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:LogMessage DisplayName="Log Message - Folder Already exists." sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[Department + &quot; department folder already exists on SharePoint.&quot;]" />
                        </If.Then>
                        <If.Else>
                          <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - Create folder for department" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_3" LibraryName="Documents" RelativeUrl="[in_sharepointCreateFolderPath + Department]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                        </If.Else>
                      </If>
                      <Assign DisplayName="Assign - Department to SharePoint create folder path" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[sharepointCreateFolderPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_sharepointCreateFolderPath + Department + "/"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - department folder path" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[departmentFolderPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(out_mainDepartmentsFolderPath, Department)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder - For department on local machine" sap:VirtualizedContainerService.HintSize="648,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_7" Path="[departmentFolderPath]" />
                    </Sequence>
                    <Sequence sap2010:Annotation.AnnotationText="Create folder for year " DisplayName="Sequence - Check if Years Folder Exists or not" sap:VirtualizedContainerService.HintSize="1276,99" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="s:String[]" Name="yearFolder" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - Year equal to previous year" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_Year]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[DateTime.Now.AddMonths(-1).ToString("yyyy")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[yearFolder]" ChooseFile="False" DisplayName="Get children names - Department folders children" sap:VirtualizedContainerService.HintSize="648,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_2" RelativeUrl="[in_sharepointFolderPath + in_processName + &quot;/Departments/&quot; + Department + &quot;/&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                      <If Condition="[yearFolder.Contains(out_Year)]" DisplayName="If - On SharePoint check if the Year folder already exists, If not then create it." sap:VirtualizedContainerService.HintSize="648,262" sap2010:WorkflowViewState.IdRef="If_14">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:LogMessage DisplayName="Log Message -Year Folder Already exists." sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[out_Year + &quot; folder already exists  on SharePoint.&quot;]" />
                        </If.Then>
                        <If.Else>
                          <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - Create Year folder" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_2" LibraryName="Documents" RelativeUrl="[sharepointCreateFolderPath + out_Year]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                        </If.Else>
                      </If>
                      <Assign DisplayName="Assign - year to SharePoint create folder path" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[sharepointCreateFolderPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[sharepointCreateFolderPath + out_Year + "/"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - Year folder path" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[yearFolderPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(departmentFolderPath, out_Year)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder - Create Years folder if not exists on local machine" sap:VirtualizedContainerService.HintSize="648,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[yearFolderPath]" />
                    </Sequence>
                    <Sequence sap2010:Annotation.AnnotationText="Create folder for each month" DisplayName="if Months folder does not exist then create it" sap:VirtualizedContainerService.HintSize="1276,99" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="s:String[]" Name="monthsFolder" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - Previous months name" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_previousMonth]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[DateTime.Now.AddMonths(-1).ToString("MMMM")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[monthsFolder]" ChooseFile="False" DisplayName="Get children names - In years folder" sap:VirtualizedContainerService.HintSize="648,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_5" RelativeUrl="[in_sharepointFolderPath + in_processName + &quot;/Departments/&quot; + Department + &quot;/&quot; + out_Year + &quot;/&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                      <If Condition="[monthsFolder.Contains(out_previousMonth)]" DisplayName="If - On SharePoint check if the Month folder already exists, If not then create it." sap:VirtualizedContainerService.HintSize="648,262" sap2010:WorkflowViewState.IdRef="If_15">
                        <If.Then>
                          <ui:LogMessage DisplayName="Log Message -Months Folder Already exists." sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[out_previousMonth + &quot; folder already exists  on SharePoint.&quot;]" />
                        </If.Then>
                        <If.Else>
                          <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - Months Folder" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_4" LibraryName="Documents" RelativeUrl="[sharepointCreateFolderPath + out_previousMonth]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                        </If.Else>
                      </If>
                      <Assign DisplayName="Assign - Months name to SharePoint create folder path" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[sharepointCreateFolderPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[sharepointCreateFolderPath + out_previousMonth + "/"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - Folder path for months" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[monthFolderPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(yearFolderPath, out_previousMonth)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder - for months on local machine" sap:VirtualizedContainerService.HintSize="648,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[monthFolderPath]" />
                    </Sequence>
                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Compare each employee department with List of department and store in filter data table vaiable" DataTable="[dt_EmployeeData]" DisplayName="Filter Data Table - Department Wise" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1276,206" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_FilteredEmployee]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                            <ui:FilterOperationArgument.Column>
                              <InArgument x:TypeArguments="x:String">["Employee Department"]</InArgument>
                            </ui:FilterOperationArgument.Column>
                            <ui:FilterOperationArgument.Operand>
                              <InArgument x:TypeArguments="x:String">[Department]</InArgument>
                            </ui:FilterOperationArgument.Operand>
                          </ui:FilterOperationArgument>
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <x:Null />
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:FilterDataTable>
                    <Assign sap2010:Annotation.AnnotationText="Get current Date" DisplayName="Assign - Get current date" sap:VirtualizedContainerService.HintSize="1276,91" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_currentDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("MMddyyyy")]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Set location and name for department excel file" DisplayName="Assign - Excel file location in variable" sap:VirtualizedContainerService.HintSize="1276,104" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[DepartmentExcelFile]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[monthFolderPath + "/" + out_previousMonth + "_SalaryDetails_" + out_currentDate +".xlsx"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:PathExists sap2010:Annotation.AnnotationText="Check if the file exists and store it in the boolean variable" DisplayName="Path Exists - Check if department file exist or not" Exists="[departmentFileExists]" sap:VirtualizedContainerService.HintSize="1276,134" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[DepartmentExcelFile]" PathType="File">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:PathExists>
                    <If sap2010:Annotation.AnnotationText="If there is no employee of some department then delete that department from list" Condition="[dt_FilteredEmployee.Rows.Count &gt; 0]" DisplayName="If - check if filter data table contains any data or not" sap:VirtualizedContainerService.HintSize="1276,994" sap2010:WorkflowViewState.IdRef="If_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If sap2010:Annotation.AnnotationText="If file is not exists then open excel application scope and write filter data in excel file" Condition="[departmentFileExists]" DisplayName="If - check if file already exists or not" sap:VirtualizedContainerService.HintSize="855,803" sap2010:WorkflowViewState.IdRef="If_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:LogMessage DisplayName="Log Message - Department file alreadu exist" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[Department + &quot; File already Exists.&quot;]" />
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Sequence - Create and write in department file" sap:VirtualizedContainerService.HintSize="476,612" sap2010:WorkflowViewState.IdRef="Sequence_53">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Open Department Excel File" sap:VirtualizedContainerService.HintSize="434,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[departmentExcelWorkbook]" WorkbookPath="[DepartmentExcelFile]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do - Excel Application Scope - Open Department Excel File" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelWriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_FilteredEmployee]" DisplayName="Write Range - Write filtered data in excel workbook" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[Department]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelCloseWorkbook DisplayName="Close Workbook - Excel Application Scope - Open Department Excel File" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[departmentExcelWorkbook]" />
                              <ui:LogMessage DisplayName="Log Message - File created and write " sap:VirtualizedContainerService.HintSize="434,93" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[Department + &quot; Departments Excel file created and write employee data in it.&quot;]" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:Annotation.AnnotationText="If there is no employee of some department then add that department in departmentList " DisplayName="Sequence - False, Department has no data found" sap:VirtualizedContainerService.HintSize="376,291" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message - department has no data " sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[Department + &quot; Department has no data.&quot;]" />
                          <AddToCollection x:TypeArguments="x:String" Collection="[departmentListNoData]" DisplayName="Add To Collection - departments which has no data" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[Department]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </usa:SharepointApplicationScope.Body>
    </usa:SharepointApplicationScope>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Remove each department of departmentListNoData, from ListOfDepartment  " DisplayName="For Each - list of department who has no data " sap:VirtualizedContainerService.HintSize="1430,416" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[departmentListNoData]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="department" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body - Remove those data from list of department" sap:VirtualizedContainerService.HintSize="376,247" sap2010:WorkflowViewState.IdRef="Sequence_41">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <RemoveFromCollection x:TypeArguments="x:String" Collection="[out_listOfDepartment]" DisplayName="Remove From ListOfDepartment" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_2" Item="[department]" />
            <ui:LogMessage DisplayName="Log Message - Remove department from list of department" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Remove &quot; + department + &quot; department from list of deprtment, cause department have no data found.&quot;]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message - Workflow execution ended for filter dpartment wise data" sap:VirtualizedContainerService.HintSize="1430,93" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Filter department wise data execution ended.&quot;]" />
  </Sequence>
</Activity>